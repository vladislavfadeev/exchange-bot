from aiogram.fsm.context import FSMContext
from core.middlwares.routes import r    # Dataclass whith all api routes
from core.api_actions.bot_api import SimpleAPI



async def start_message(state: FSMContext):
    '''
    '''
    data: dict = await state.get_data()
    events: list = data.get('user_events')
    uncompleted_transfers: list = data.get('uncompleted_transfers')
    insert: str = '<b>–£ –≤–∞—Å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!</b> ‚úâ\n\n' if events else ''
    if uncompleted_transfers:
        message = (
            '‚ö†Ô∏è <b>–£ –≤–∞—Å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–π –≤—Ö–æ–¥—è—â–∏–π –ø–µ—Ä–µ–≤–æ–¥!</b>\n\n'
            '<b>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å.</b>'
        )
    else:
        message = (
            f'{insert}'
            'üìù <b>–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.</b>\n'
            '–ï—Å–ª–∏ –≤—ã –≤–ø–µ—Ä–≤—ã–µ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –¥–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º - —Ç–æ '
            '–Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–¥—É–µ–º –≤–∞–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ø—Ä–∞–≤–∫–æ–π –ø–µ—Ä–µ–¥ '
            '—Å–æ–≤–µ—Ä—à–µ–Ω–∏–µ–º –æ–±–º–µ–Ω–∞.\n\n'
            '–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:'
        )

    return message



async def offer_list_msg_maker(offer: dict):

    minAmount = '–õ—é–±–∞—è' if offer['minAmount'] == None else f"{offer['minAmount']} {offer['currency']}"
    maxAmount = '–õ—é–±–∞—è' if offer['maxAmount'] == None else f"{offer['maxAmount']} {offer['currency']}"
    score_data = offer.get('owner_score')
    type_var: str = offer.get('type')
    type: str = '–ü—Ä–æ–¥–∞–∂–∞' if type_var == 'sell' else '–ü–æ–∫—É–ø–∫–∞'
    rbanks = ''
    cbanks = ''
    for rName in offer['refBanks']:
        rbanks += f'üîπ {rName["name"]}\n'

    for cName in offer['currencyBanks']:
        cbanks += f'üîπ {cName["name"]}\n'

    rbanks = "‚ö†Ô∏è –°—á–µ—Ç –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω!" if not rbanks else rbanks
    cbanks = "‚ö†Ô∏è –°—á–µ—Ç –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω!" if not cbanks else cbanks
    
    message = (
        f'‚úÖ <b>–†–µ–π—Ç–∏–Ω–≥ –æ–±–º–µ–Ω–Ω–∏–∫–∞:</b>\n'
        f'üîπ–°—Ä–µ–¥–Ω—è—è —Å—É–º–º–∞ —Å–¥–µ–ª–∫–∏: {score_data["avg_amount"]} MNT\n'
        f'üîπ–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥: {score_data["avg_time"]}\n'
        f'üîπ–í—Å–µ–≥–æ –æ–±–º–µ–Ω–æ–≤: {score_data["total_transactions"]}\n\n'
        f'üí∏ <b>{offer["bannerName"]}</b> üí∏\n'
        f'üí∞ <b>{type} {offer["currency"]}</b> üí∞\n'
        f'üí≥ –ë–∞–Ω–∫–∏, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–±–º–µ–Ω–Ω–∏–∫:\n\n'
        f'{offer["currency"]}\n'
        f'{cbanks}'
        f'\nMNT:\n'
        f'{rbanks}\n'
        f'‚ñ∂Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞: ‚ö° {minAmount}\n'
        f'‚ñ∂Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞: ‚ö° {maxAmount}\n\n'
        f'üî• –ö—É—Ä—Å –≤ MNT:<b> {offer["rate"]}</b>\n'
    )

    return message


async def set_amount_msg_maker(offerData):

    message = (
        f'‚úÖ –í–∞—à –≤—ã–±–æ—Ä –ø—Ä–∏–Ω—è—Ç!\n\n'
        '<b>–î–æ—Ä–æ–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏!</b>\n'
        '–û–±–º–µ–Ω–Ω–∏–∫–∏ –º–æ–≥—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç –¥–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä–∞–∑ '
        '–≤ –¥–µ–Ω—å, –ø–æ—ç—Ç–æ–º—É —É—Å–ª–æ–≤–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ 20 –º–∏–Ω—É—Ç.\n\n'
        f'üíµ <b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É {offerData["currency"]} –¥–ª—è –æ–±–º–µ–Ω–∞:</b>'
        )
        

    return message


async def set_amount_returned_msg_maker(offerData):

    message = f'üîπ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É {offerData["currency"]} –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å:'

    return message


async def min_amount_error_msg_maker(offerData):

    message = (
        '‚ö†Ô∏è –í—ã —É–∫–∞–∑–∞–ª–∏ —Å—É–º–º—É –º–µ–Ω—å—à–µ, —á–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ '
        '—Å–¥–µ–ª–∫–∏, –æ–±–æ–∑–Ω–∞—á–µ–Ω–Ω–∞—è –æ–±–º–µ–Ω–Ω–∏–∫–æ–º –≤ –¥–∞–Ω–Ω–æ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–∏.\n\n'
        '‚Ü© –í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –≤—ã–±—Ä–∞—Ç—å '
        '–¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–ª–∏ —É–∫–∞–∑–∞—Ç—å —Å—É–º–º—É –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö:\n\n'
        f'üí∞ –æ—Ç <b>{offerData["minAmount"]}</b> –¥–æ <b>{offerData["maxAmount"]} {offerData["currency"]}</b>'
    )
    return message


async def max_amount_error_msg_maker(offerData):

    message = (
        '‚ö†Ô∏è –í—ã —É–∫–∞–∑–∞–ª–∏ —Å—É–º–º—É –±–æ–ª—å—à–µ, —á–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ '
        '—Å–¥–µ–ª–∫–∏, –æ–±–æ–∑–Ω–∞—á–µ–Ω–Ω–∞—è –æ–±–º–µ–Ω–Ω–∏–∫–æ–º –≤ –¥–∞–Ω–Ω–æ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–∏.\n\n'
        '‚Ü© –í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –≤—ã–±—Ä–∞—Ç—å '
        '–¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–ª–∏ —É–∫–∞–∑–∞—Ç—å —Å—É–º–º—É –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö:\n\n'
        f'üí∞ –æ—Ç <b>{offerData["minAmount"]}</b> –¥–æ <b>{offerData["maxAmount"]} {offerData["currency"]}</b>'
    )
    return message


async def show_user_buy_amount(sellAmount, rate, currency, type):

    message_buy =(
        f'üí∏ –í—ã –ø—Ä–æ–¥–∞–µ—Ç–µ: ‚ö° {sellAmount} {currency}\n'
        f'üí∞ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ: ‚ö° {round(sellAmount * rate)} MNT'
    )
   
    message_sell =(
        f'üí∏ –í—ã –ø–æ–∫—É–ø–∞–µ—Ç–µ: ‚ö° {sellAmount} {currency}\n'
        f'üí∞ –í—ã –∑–∞–ø–ª–∞—Ç–∏—Ç–µ: ‚ö° {round(sellAmount * rate)} MNT'
    )    
    return message_buy if type == 'buy' else message_sell


async def set_changer_bank(currency):

    message = (
        'üè¶ –í—ã–±–µ—Ä–µ—Ç–µ –±–∞–Ω–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –±—É–¥–µ—Ç —É–¥–æ–±–Ω–æ '
        f'–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ üí∏ {currency} –æ–±–º–µ–Ω–Ω–∏–∫—É üëá'
    )    
    return message


async def choose_user_bank_from_db(currency):

    message = (
        f'‚úÖ –†–∞–Ω–µ–µ –≤—ã —É–∫–∞–∑—ã–≤–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Å—á–µ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å {currency}. '
        '–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –ª–∏–±–æ —É–∫–∞–∑–∞—Ç—å –Ω–æ–≤—ã–π. ‚¨á'
    )
    return message


async def set_buy_bank_account(bankName):

    message = (
        '‚úÖ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ –≤ –±–∞–Ω–∫–µ '
        f'üè¶ {bankName}, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ '
        '–ø–æ–ª—É—á–∏—Ç—å –æ–ø–ª–∞—Ç—É –æ—Ç –æ–±–º–µ–Ω–Ω–∏–∫–∞.\n\n'
        '‚ö†Ô∏è <b>–ë—É–¥—å—Ç–µ –ø—Ä–µ–¥–µ–ª—å–Ω–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã!</b> ‚ö†Ô∏è'
    )
    return message


async def complete_set_new_bank(allData, api_gateway: SimpleAPI):

    sellAmount = allData['sellAmount']
    offerData = allData['selectedOffer']

    detailUrl = allData["changerBank"]
    response: dict = await api_gateway.get_detail(
        path=r.changerRoutes.banks,
        detailUrl=detailUrl
    )
    exception: bool = response.get('exception')
    if not exception:
        acc: list = response.get('response')

        message = (
            '‚úÖ <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –ø—Ä–∏–Ω—è—Ç—ã!</b>\n'
            f'üëâ –¢–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ {sellAmount} {offerData["currency"]} '
            '–Ω–∞ —Å—á–µ—Ç –æ–±–º–µ–Ω–Ω–∏–∫–∞, –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º –Ω–∏–∂–µ:\n\n'
            f'üè¶ –ë–∞–Ω–∫: {acc["name"]}\n'
            f'üí≥ –°—á–µ—Ç: <code>{acc["bankAccount"]}</code>\n\n'
            '‚ö†Ô∏è <b>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!</b>‚ö†Ô∏è\n'
            '–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞, –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º '
            '–ø—Ä–∏—à–ª–∏—Ç–µ <b>—Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —á–µ–∫</b> —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞—Ç–µ–∂–µ'
        )
        return message



async def user_inform(amount: int, currency: str):

    message= (
        '‚úÖ <b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!</b>\n'
        f'–û–∂–∏–¥–∞–π—Ç–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ üíµ {amount} {currency} '
        '–Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤–∞–º–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.'
    )
    return message



async def set_user_bank_name(currency):

    value: str = (
        '<b>–í–Ω–∏–º–∞–Ω–∏–µ!</b>\n'
        f'–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è, –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ –≤–∞–ª—é—Ç–µ {currency}'
        f'–ø–æ–¥–¥–µ–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –±–∞–Ω–∫–∞–º–∏ –ú–æ–Ω–≥–æ–ª–∏–∏.\n'
    )
    alert: str = value if currency == 'USD' else ''
    
    message= (
        f'{alert}\n'
        '–í—ã –≤–ø–µ—Ä–≤—ã–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ –æ–±–º–µ–Ω –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ, —É –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏–≤—à–∏—Ö—Å—è —Å—á–µ—Ç–æ–≤.\n'
        f'üè¶ –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞, –∫—É–¥–∞ –≤—ã —Ö–æ–¥–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å üí∏ {currency}: üëá'
    )
    return message


async def enter_user_bank_name(currency):

    message = (
        f'üè¶ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å üí∏ {currency} '
        '–æ—Ç –æ–±–º–µ–Ω–Ω–∏–∫–∞:'
    )
    return message


async def final_step_timeout_message():

    message = (
        '<b>–ú—ã —Å–æ–∂–∞–ª–µ–µ–º, –Ω–æ 20 –º–∏–Ω—É—Ç —É–∂–µ –ø–æ—à–ª–∏..</b>\n'
        '–£—Å–ª–æ–≤–∏—è –ø–æ –¥–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é –ø–æ–º–µ–Ω—è–ª–∏—Å—å, '
        '–∏ –∑–∞—è–≤–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–Ω–æ–≤–æ.\n\n'
        '<b>–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–≤–µ–ª–∏ –¥–µ–Ω—å–≥–∏</b>, —Ç–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º '
        '–ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ, –æ–Ω –≤–∞–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–º–æ–∂–µ—Ç.'
    )
    return message


async def timeout_message():
    message = (
        '<b>–ú—ã —Å–æ–∂–∞–ª–µ–µ–º, –Ω–æ 20 –º–∏–Ω—É—Ç —É–∂–µ –ø–æ—à–ª–∏..</b>\n'
        '–£—Å–ª–æ–≤–∏—è –ø–æ –¥–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é –ø–æ–º–µ–Ω—è–ª–∏—Å—å, '
        '–∏ –∑–∞—è–≤–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–Ω–æ–≤–æ.\n\n'
    )
    return message



async def staff_welcome(transfers):

    # stuff_name = f'{response["name"]} {response["lastName"]}'
    value = len(transfers) if transfers else None
    alert = f'<b>–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥!</b>\n\n' if value else 'üí∞'

    message = (
        f'{alert}'
        'üíª –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞.\n\n'
        '<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>'
    )

    return message


async def stuff_offer_menu():

    message = (
        '‚úÖ –í—ã –≤–æ—à–ª–∏ –≤ –º–µ–Ω—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ –æ–±–º–µ–Ω—É.\n\n'
        '<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>'
    ) 
    return message


async def stuff_set_currency():

    message = (
        'üíµ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ üëá'
    )
    return message


async def stuff_show_rate(rate, currency):

    message = (
        f'‚úÖ –í—ã —É–∫–∞–∑–∞–ª–∏ –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ –¥–ª—è {currency}'
        f'\n\n‚ö°<b> {rate} MNT </b>‚ö°\n\n'
        f'‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ?'
    )
    
    return message


async def stuff_create_new_offer_banks(currency, accounts = None):

    message_mini = (
        '‚úÖ –í—ã–±–µ—Ä–∏—Ç–µ —Å—á–µ—Ç(–∞), –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è '
        f'–¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ {currency} –∏ MNT. <b>–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ</b>, '
        '–ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ ‚¨á'
    )

    if accounts:
        acc_input = ''

        for key, value in accounts.items():
            for i in value:
                currency = i['currency']['name']
                acc_input += f'\nüîπ {i["name"]}\n {currency} {i["bankAccount"]}\n'

        message = (
            '‚úÖ –í—ã–±–µ—Ä–∏—Ç–µ —Å—á–µ—Ç(–∞), –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç '
            f'–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ {currency} –∏ MNT.\n'
            f'{acc_input}'
            '\n<b>–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ</b>, –ø—Ä–æ—Å—Ç–æ '
            '–Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ ‚¨á'
        )

    return message if accounts else message_mini


async def staff_set_min_amount(currency):

    message = (
        f'‚úÖ –£–∫–∞–∂–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É {currency} '
        '–¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'
    )

    return message


async def stuff_show_min_amount(amount, currency):

    message = (
        '‚úÖ –í—ã —É–∫–∞–∑–∞–ª–∏ <b>–º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É</b> '
        '—Å–¥–µ–ª–∫–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'
        f'\n\nüîπ {amount} {currency}\n\n'
        f'‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ?'
    )
    
    return message


async def stuff_set_max_amount(currency):

    message = (
        f'‚úÖ –£–∫–∞–∂–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É {currency} '
        '–¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'
    )

    return message


async def stuff_show_max_amount(amount, currency):

    message = (
        f'‚úÖ –í—ã —É–∫–∞–∑–∞–ª–∏ <b>–º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É</b> '
        '–¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'
        f'\n\nüîπ {amount} {currency}\n\n'
        f'‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ?'
    )
    
    return message


async def staff_max_len_message(var):

    message = (
        '‚ö†Ô∏è –í–≤–µ–¥–µ–Ω—ã–π –≤–∞–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–º–µ–µ—Ç '
        f'–¥–ª–∏–Ω—É –±–æ–ª–µ–µ 50 —Å–∏–º–≤–æ–ª–æ–≤. –ê –∏–º–µ–Ω–Ω–æ {var}.\n\n'
        '<b>–°–æ–∫—Ä–∞—Ç–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤.</b>'
    )

    return message


async def staff_show_offer_name(description):

    message = (
        f'‚úÖ <b>–í—ã –≤–≤–µ–ª–∏ —Å–ª–µ–¥—É—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</b>\n\n'
        f'{description}\n\n'
        f'–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ?'
    )

    return message


async def staff_create_offer_show_final_text(
        post_data: dict,
        banks_accounts: dict
    ):

    minAmount = '–õ—é–±–∞—è' if post_data['minAmount'] == None else f"{post_data['minAmount']} {post_data['currency']}"
    maxAmount = '–õ—é–±–∞—è' if post_data['maxAmount'] == None else f"{post_data['maxAmount']} {post_data['currency']}"
    currency = post_data.get('currency')
    type_var: str = post_data.get('type')
    type: str = '–ü—Ä–æ–¥–∞–∂–∞' if type_var == 'sell' else '–ü–æ–∫—É–ø–∫–∞'

    rbanks = ''
    cbanks = ''
    for rName in banks_accounts['MNT']:
        rbanks += f'üîπ {rName["name"]}\n'

    for cName in banks_accounts[currency]:
        cbanks += f'üîπ {cName["name"]}\n'

    rbanks = "‚ö†Ô∏è –°—á–µ—Ç –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω!" if not rbanks else rbanks
    cbanks = "‚ö†Ô∏è –°—á–µ—Ç –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω!" if not cbanks else cbanks

    message = (
        f'üí∏ <b>{post_data["bannerName"]}</b> üí∏\n'
        f'üí∞ <b>{type} {post_data["currency"]}</b> üí∞\n'
        f'üí≥ –ë–∞–Ω–∫–∏, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–±–º–µ–Ω–Ω–∏–∫:üëá\n\n'
        f'{post_data["currency"]}\n'
        f'{cbanks}'
        f'MNT:\n'
        f'{rbanks}\n'
        f'‚ñ∂Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞: ‚ö° {minAmount}\n'
        f'‚ñ∂Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞: ‚ö° {maxAmount}\n\n'
        f'üî• –ö—É—Ä—Å –≤ MNT: <b>{post_data["rate"]}</b>\n'
    )
    return message



async def staff_edit_offer_show(offer: dict):

    minAmount = '–õ—é–±–∞—è' if offer['minAmount'] == None else f"{offer['minAmount']} {offer['currency']}"
    maxAmount = '–õ—é–±–∞—è' if offer['maxAmount'] == None else f"{offer['maxAmount']} {offer['currency']}"
    score_data = offer['owner_score']
    type_var: str = offer.get('type')
    type: str = '–ü—Ä–æ–¥–∞–∂–∞' if type_var == 'sell' else '–ü–æ–∫—É–ø–∫–∞'
    rbanks = ''
    cbanks = ''
    for rName in offer['refBanks']:
        rbanks += f'üëâ {rName["name"]}\n'

    for cName in offer['currencyBanks']:
        cbanks += f'üëâ {cName["name"]}\n'

    rbanks = "‚ö†Ô∏è –°—á–µ—Ç –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω!" if not rbanks else rbanks
    cbanks = "‚ö†Ô∏è –°—á–µ—Ç –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω!" if not cbanks else cbanks

    message = (
        f'‚úÖ <b>–†–µ–π—Ç–∏–Ω–≥ –æ–±–º–µ–Ω–Ω–∏–∫–∞:</b>\n'
        f'üîπ–°—Ä–µ–¥–Ω—è—è —Å—É–º–º–∞ —Å–¥–µ–ª–∫–∏: {score_data["avg_amount"]} MNT\n'
        f'üîπ–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥: {score_data["avg_time"]}\n'
        f'üîπ–í—Å–µ–≥–æ –æ–±–º–µ–Ω–æ–≤: {score_data["total_transactions"]}\n\n'
        f'üí∏ <b>{offer["bannerName"]}</b> üí∏\n'
        f'üí∞ <b>{type} {offer["currency"]}</b> üí∞\n'
        f'üí≥ –ë–∞–Ω–∫–∏, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–±–º–µ–Ω–Ω–∏–∫:\n\n'
        f'{offer["currency"]}\n'
        f'{cbanks}'
        f'\nMNT:\n'
        f'{rbanks}\n'
        f'‚ñ∂Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞: ‚ö° {minAmount}\n'
        f'‚ñ∂Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞: ‚ö° {maxAmount}\n\n'
        f'üî• –ö—É—Ä—Å –≤ MNT:<b> {offer["rate"]}</b>\n'
    )
    return message




async def staff_show_editable_banks(bank: dict):

    alert_msg = ''
    if bank.get('will_deactivate') and bank.get('isActive'):
        alert_msg = (
        '–ï—Å–ª–∏ —Å–¥–µ–ª–∞—Ç—å –¥–∞–Ω–Ω—ã–π —Å—á–µ—Ç –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã–º - —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ '
        f'—Å–Ω–∏–º–µ—Ç—Å—è {bank.get("will_deactivate")} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ–±–º–µ–Ω. '
        '–û–Ω–∏ –æ—Ç–æ–±—Ä–∞–∑—è—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ú–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</b> > <b>–ù–µ –∞–∫—Ç–∏–≤–Ω—ã–µ</b>'
        )
    message = (
        f'üí∞ <b>–ë–∞–Ω–∫ {bank["name"]}</b>\n\n'
        f'üíµ –í–∞–ª—é—Ç–∞ {bank["currency"]["name"]}\n'
        f'üí≥ –°—á–µ—Ç: <code>{bank["bankAccount"]}</code>\n\n'
        f'{alert_msg}'
    )

    return message


async def staff_show_uncompleted_transfers(transfer):

    id = transfer['id']
    sell_cur = transfer['offerCurrency']
    sell_amount = transfer['sellAmount']
    buy_amount = transfer['buyAmount']
    rate = transfer['rate']
    type_var = transfer['type']

    type: str = '–ü—Ä–æ–¥–∞–∂–∞' if type_var == 'sell' else '–ü–æ–∫—É–ø–∫–∞'

    message = (
        '‚úÖ <b>–ù–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥!</b>\n\n'
        f'üîπ <b>ID {id}</b>\n'
        f'üîπ <b>{type} {sell_cur}</b>\n'
        f'üîπ –ö—É—Ä—Å {rate}\n\n'
        f'üîπ <b>–í–∞–º –ø–µ—Ä–µ–≤–µ–ª–∏ {sell_amount} {sell_cur}</b>\n'
    )

    return message



async def staff_show_uncompleted_transfer_detail(transfer):

    id = transfer['id']
    sell_cur = transfer['offerCurrency']
    sell_amount = transfer['sellAmount']
    buy_amount = transfer['buyAmount']
    rate = transfer['rate']
    type_var = transfer['type']
    changer_bank_name = transfer['changerBank']['name']
    changer_bank_acc = transfer['changerBank']['bankAccount']
    user_bank_name = transfer['userBank']['name']
    user_bank_acc = transfer['userBank']['bankAccount']

    type: str = '–ü—Ä–æ–¥–∞–∂–∞' if type_var == 'sell' else '–ü–æ–∫—É–ø–∫–∞'

    message = (
        f'‚úÖ <b>–ü–µ—Ä–µ–≤–æ–¥ ID {id}</b>\n'
        f'üí∞<b> {type} {sell_cur}</b> üí∞\n'
        f'üîπ –ö—É—Ä—Å{rate} - —Å—É–º–º–∞ {sell_amount} {sell_cur}\n'
        f'üí≥ –ë–∞–Ω–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–¥–µ–ª–∞–ª –ø–µ—Ä–µ–≤–æ–¥:\n\n'
        f'{changer_bank_name}\n'
        f'{changer_bank_acc}\n\n'
        f'<b>–í—ã –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ {buy_amount} MNT</b>\n'
        f'<b>–ø–æ —Å–ª–µ–¥—É—é—â–∏–º —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º</b> :\n\n'
        f'<b>{user_bank_name}</b>\n'
        f'<u><code>{user_bank_acc}</code></u>\n\n'
        'üì¢‚ö†Ô∏èüì¢‚ö†Ô∏èüì¢‚ö†Ô∏èüì¢‚ö†Ô∏èüì¢‚ö†Ô∏è\n'
        '<b>–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å—Ä–∞–∑—É –ø—Ä–∏—à–ª–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</b> '
        '–≤ –≤–∏–¥–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏–ª–∏ '
        '—á–µ–∫–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ –ø–æ—è–≤–∏–≤—à—É—é—Å—è –∫–Ω–æ–ø–∫—É <b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</b>!\n\n'
        '–í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –±—É–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω '
        '—á—Ç–æ –ø—Ä—è–º–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∞—à—É —Ä–µ–ø—É—Ç–∞—Ü–∏—é!\n'
    )

    return message



async def user_show_events(user_event: dict):

    id = user_event['id']
    sell_cur = user_event['offerCurrency']
    sell_amount = user_event['sellAmount']
    buy_amount = user_event['buyAmount']
    rate = user_event['rate']
    type_var: str = user_event.get('type')
    type: str = '–ü—Ä–æ–¥–∞–∂–∞' if type_var == 'sell' else '–ü–æ–∫—É–ø–∫–∞'

    user_bank_name = user_event['userBank']['name']
    user_bank_acc = user_event['userBank']['bankAccount']

    message = (
        f'\n–ü–µ—Ä–µ–≤–æ–¥ id {id}\n'
        f'üí∞<b> {type} {sell_cur}</b> üí∞\n'
        f'–ö—É—Ä—Å {rate} - —Å—É–º–º–∞ {sell_amount} {sell_cur}\n'
        f'üí≥ –ë–∞–Ω–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –æ–±–º–µ–Ω–Ω–∏–∫ —Å–¥–µ–ª–∞–ª –ø–µ—Ä–µ–≤–æ–¥:üëá\n\n'
        f'{user_bank_name}\n'
        f'<code>{user_bank_acc}</code>\n\n'
        f'–°—É–º–º–∞: {buy_amount}\n\n'
        'üì¢‚ö†Ô∏èüì¢‚ö†Ô∏èüì¢‚ö†Ô∏èüì¢‚ö†Ô∏èüì¢‚ö†Ô∏è\n'
        '<b>–£–±–µ–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ—Å—å–±–∞!</b>\n'
        '–ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞–∂–º–∏—Ç–µ '
        '–Ω–∞ –∫–Ω–æ–ø–∫—É <b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥</b>!\n\n'
        '–í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –±—É–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω'
        '—á—Ç–æ –ø—Ä—è–º–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—é –æ–±–º–µ–Ω–Ω–∏–∫–∞!\n'
    )

    return message



async def user_max_len_message(value: int):
    message = (
        '‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ–µ –≤–∞–º–∏ –Ω–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏–º–µ–µ—Ç '
        f'–¥–ª–∏–Ω—É –±–æ–ª–µ–µ 20 —Å–∏–º–≤–æ–ª–æ–≤. –ê –∏–º–µ–Ω–Ω–æ {value}.\n\n'
        '<b>–°–æ–∫—Ä–∞—Ç–∏—Ç–µ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.</b>'
    )
    return message


async def error_set_new_bank(account: int):

    message = (
        f'‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤–∞–º–∏ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç '
        f'—É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. '
        f'–í–µ—Ä–æ—è—Ç–Ω–æ –≤—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –≤ –µ–≥–æ –Ω–æ–º–µ—Ä–µ:'
        f'\n<code>{account}</code>\n'
        f'–ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–∫ - –ø—Ä–æ—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –µ—â–µ —Ä–∞–∑. '
        f'–ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–æ–º–µ—Ä–∞, —Å–æ–æ–±—â–∏—Ç–µ '
        f'–æ –≤–æ–∑–Ω–∏–∫—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –æ–Ω –≤–æ –≤—Å–µ–º —Ä–∞–∑–±–µ—Ä–µ—Ç—Å—è.'
    )

    return message