from aiogram.utils.keyboard import InlineKeyboardBuilder
from core.middlwares.settigns import appSettings
from core.api_actions.bot_api import SimpleAPI
from core.middlwares.routes import r  # Dataclass whith all api routes
from core.keyboards.callbackdata import (
    StaffEditData,
    StaffOfficeData,
    URLData,
    UserHomeData,
)


async def staff_welcome_button(transfers):
    value = len(transfers) if transfers else None
    button_text = f"üí∞ –í—Ö–æ–¥—è—â–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã ({value})" if value else "üí∞ –í—Ö–æ–¥—è—â–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã"

    builder = InlineKeyboardBuilder()
    actions = {
        "offers": "üìä –ú–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
        "staff_show_accounts": "üí≥ –ú–æ–∏ —Å—á–µ—Ç–∞",
        "staff_show_transfers": button_text,
    }
    for action in actions.keys():
        builder.button(
            text=actions[action], callback_data=StaffOfficeData(action=action)
        )
    builder.adjust(2)

    return builder.as_markup()


async def stuff_offer_menu_buttons():
    builder = InlineKeyboardBuilder()
    actions = {
        "create_new": "üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ",
        "edit_offers": "‚öôÔ∏è –ê–∫—Ç–∏–≤–Ω—ã–µ",
        "inactive": "üóÑ –ù–µ –∞–∫—Ç–∏–≤–Ω—ã–µ",
    }
    for action in actions.keys():
        builder.button(
            text=actions[action], callback_data=StaffOfficeData(action=action)
        )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(2, 1)

    return builder.as_markup()


async def stuff_edit_offer_list_buttons(offer_id: int, draft: bool):
    builder = InlineKeyboardBuilder()
    pub_actions = {
        "staff_edit_offer": "‚öôÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
        "staff_delete_offer": "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å",
        "staff_unpublish_offer": "üóÑ –£–±—Ä–∞—Ç—å —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏",
    }
    draft_actions = {
        "staff_edit_offer": "‚öôÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
        "staff_delete_offer": "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∏–∑ –∞—Ä—Ö–∏–≤–∞",
        "staff_publish_offer": "üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å",
    }
    actions = draft_actions if draft else pub_actions
    for action in actions.keys():
        builder.button(
            text=actions[action],
            callback_data=StaffEditData(id=offer_id, action=action, value=""),
        )

    builder.adjust(2, 1)

    return builder.as_markup()


async def sfuff_cancel_button():
    """."""
    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(1)

    return builder.as_markup()


async def set_sell_currency_button(api_gateway: SimpleAPI):
    """ """
    response: dict = await api_gateway.get(path=r.keysRoutes.currencyList)
    exception: bool = response.get("exception")
    if not exception:
        currency: list = response.get("response")
        builder = InlineKeyboardBuilder()

        for curr in currency:
            if curr["name"] == "MNT":
                pass
            else:
                builder.button(
                    text=f'–ü—Ä–æ–¥–∞–∂–∞ {curr["name"]}',
                    callback_data=StaffEditData(
                        id=curr["id"],
                        value=curr["name"],
                        action="new_sell_offer_currency",
                    ),
                )
                builder.button(
                    text=f'–ü–æ–∫—É–ø–∫–∞ {curr["name"]}',
                    callback_data=StaffEditData(
                        id=curr["id"],
                        value=curr["name"],
                        action="new_buy_offer_currency",
                    ),
                )
        builder.button(
            text="‚Ü© –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=UserHomeData(action="cancel", id=0)
        )
        builder.adjust(2)

        return builder.as_markup()


async def staff_accept_new_rate():
    """ """
    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚§µÔ∏è –°–æ–≥–ª–∞—Å–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
        callback_data=StaffEditData(id=0, action="create_new_offer_banks", value=""),
    )
    builder.button(
        text="‚§¥Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è, –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é —Å—É–º–º—É",
        callback_data=StaffEditData(
            id=0, action="new_offer_currency_returned", value=""
        ),
    )
    builder.adjust(1)
    return builder.as_markup()


async def stuff_new_offer_banks_w_next(banks: list):
    builder = InlineKeyboardBuilder()

    for bank in banks:
        bank: dict
        currency = bank["currency"]["name"]

        builder.button(
            text=(
                f"üí≥ {bank.get('name')} - " f"({currency})\n{bank.get('bankAccount')}"
            ),
            callback_data=StaffEditData(
                id=bank.get("id"), action="staff_set_banks", value=""
            ),
        )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(1)

    return builder.as_markup()


async def stuff_create_new_offer_banks(banks):
    builder = InlineKeyboardBuilder()

    for bank in banks:
        currency = bank["currency"]["name"]

        builder.button(
            text=f"üí≥ {bank.get('name')} - ({currency})\n{bank.get('bankAccount')}",
            callback_data=StaffEditData(
                id=bank.get("id"), action="staff_set_banks", value=""
            ),
        )
    builder.button(
        text="üëå –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
        callback_data=StaffEditData(
            id=bank.get("id"), action="staff_will_set_amount", value=""
        ),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_zero_banks_buttons():
    contact = appSettings.botSetting.troubleStaffId
    builder = InlineKeyboardBuilder()

    builder.button(
        text="üëÆüèª –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º",
        url=f"tg://user?id={contact}",
        callback_data=URLData(url=""),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_will_set_amount_kb():
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üëâ –£–∫–∞–∑–∞—Ç—å",
        callback_data=StaffEditData(id=0, action="set_min&max_amount", value=""),
    )
    builder.button(
        text="‚§µÔ∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
        callback_data=StaffEditData(id=0, action="staff_new_offer_name", value=""),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(2, 1)

    return builder.as_markup()


async def staff_set_min_amount():
    """."""
    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚§µÔ∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —à–∞–≥",
        callback_data=StaffEditData(id=0, action="staff_pass_min_amount", value=""),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_accept_min_amount():
    """ """
    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚§µÔ∏è –°–æ–≥–ª–∞—Å–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
        callback_data=StaffEditData(id=0, action="staff_set_max_amount", value=""),
    )
    builder.button(
        text="‚§¥Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è, –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é —Å—É–º–º—É",
        callback_data=StaffEditData(id=0, action="set_min&max_amount", value=""),
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_set_max_amount():
    """."""
    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚§µÔ∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —à–∞–≥",
        callback_data=StaffEditData(id=0, action="staff_pass_max_amount", value=""),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_accept_max_amount():
    """ """
    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚§µÔ∏è –°–æ–≥–ª–∞—Å–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
        callback_data=StaffEditData(id=0, action="staff_new_offer_name", value=""),
    )
    builder.button(
        text="‚§¥Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è, –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é —Å—É–º–º—É",
        callback_data=StaffEditData(id=0, action="staff_set_max_amount", value=""),
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_will_set_name():
    """ """
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üëç –î–∞",
        callback_data=StaffEditData(id=0, action="staff_set_offer_name", value=""),
    )
    builder.button(
        text="üëé –ù–µ—Ç",
        callback_data=StaffEditData(id=0, action="staff_set_offer_final", value=""),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(2, 1)

    return builder.as_markup()


async def staff_accept_offer_name():
    """ """
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üëç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
        callback_data=StaffEditData(id=0, action="staff_set_offer_final", value=""),
    )
    builder.button(
        text="‚§¥Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è, –≤–≤–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ",
        callback_data=StaffEditData(id=0, action="staff_set_offer_name", value=""),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_create_offer_final_text_kb():
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üëå –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å",
        callback_data=StaffEditData(id=0, action="staff_post_offer", value=""),
    )
    builder.button(
        text="‚ö†Ô∏è –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –±–µ–∑ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏",
        callback_data=StaffEditData(
            id=0, action="staff_post_offet_non_active", value=""
        ),
    )
    builder.button(
        text="‚Ü© –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_create_new_offer_succes():
    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚ö†Ô∏è –ü–æ–Ω—è—Ç–Ω–æ, –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data=UserHomeData(action="cancel", id=0),
    )

    return builder.as_markup()


async def staff_edit_offer_show_kb(offer):
    builder = InlineKeyboardBuilder()
    actions = {
        "staff_edit_offer_name": "üëâ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
        "staff_edit_offer_rate": "üëâ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞",
        "staff_edit_offer_banks": "üëâ –ë–∞–Ω–∫",
        "staff_edit_offer_min_amount": "üëâ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞",
        "staff_edit_offer_max_amount": "üëâ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞",
    }

    for action, text in actions.items():
        builder.button(
            text=text,
            callback_data=StaffEditData(id=offer.get("id"), action=action, value=""),
        )
    builder.button(
        text="‚Ü© –û—Ç–º–µ–Ω–∞, –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_back_to_offer_menu():
    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚Ü© –û—Ç–º–µ–Ω–∞, –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
        callback_data=StaffOfficeData(action="offers"),
    )

    return builder.as_markup()


async def staff_edit_offer_values(decline):
    """ """
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üëç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
        callback_data=StaffEditData(id=0, action="staff_edit_accept", value=""),
    )
    builder.button(
        text="‚§¥Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è, –≤–≤–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ",
        callback_data=StaffEditData(id=0, action=decline, value=""),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=StaffOfficeData(action="offers")
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_edit_offer_succes_kb():
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üëç –ü–æ–Ω—è—Ç–Ω–æ, –≤ –º–µ–Ω—é", callback_data=StaffOfficeData(action="offers")
    )

    return builder.as_markup()


async def stuff_edit_offer_banks_dis_next(banks):
    builder = InlineKeyboardBuilder()

    for bank in banks:
        currency = bank["currency"]["name"]

        builder.button(
            text=f"üí≥ {bank.get('name')} - ({currency})\n{bank.get('bankAccount')}",
            callback_data=StaffEditData(
                id=bank.get("id"), action="staff_edit_offer_banks_set", value=""
            ),
        )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data=StaffOfficeData(action="offers")
    )
    builder.adjust(1)

    return builder.as_markup()


async def stuff_edit_offer_banks(banks):
    builder = InlineKeyboardBuilder()

    for bank in banks:
        currency = bank["currency"]["name"]

        builder.button(
            text=f"üí≥ {bank.get('name')} - ({currency})\n{bank.get('bankAccount')}",
            callback_data=StaffEditData(
                id=bank.get("id"), action="staff_edit_offer_banks_set", value=""
            ),
        )
    builder.button(
        text="üëç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
        callback_data=StaffEditData(
            id=0, action="staff_edit_offer_banks_patch", value=""
        ),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data=StaffOfficeData(action="offers")
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_edit_banks_accounts(account_id, isActive):
    builder = InlineKeyboardBuilder()

    if isActive:
        actions = {
            "staff_edit_banks_inactive": "üóÑ –°–¥–µ–ª–∞—Ç—å –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã–º",
            "staff_edit_banks_delete": "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å",
        }

        for action in actions.keys():
            builder.button(
                text=actions[action],
                callback_data=StaffEditData(id=account_id, action=action, value=""),
            )

    elif not isActive:
        actions = {
            "staff_edit_banks_active": "‚ö° –°–¥–µ–ª–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º",
            "staff_edit_banks_delete": "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å",
        }

        for action in actions.keys():
            builder.button(
                text=actions[action],
                callback_data=StaffEditData(id=account_id, action=action, value=""),
            )

    builder.adjust(1)
    return builder.as_markup()


async def staff_show_transfers(transfer_id):
    builder = InlineKeyboardBuilder()

    builder.button(
        text="ü§ù –û—Ç–≤–µ—Ç–∏—Ç—å",
        callback_data=StaffEditData(
            id=transfer_id, action="staff_transfers_get_detail", value=""
        ),
    )

    builder.adjust(1)
    return builder.as_markup()


async def staff_show_transfer_detail_none_next(transfer_id, user_id):
    contact = appSettings.botSetting.troubleStaffId

    builder = InlineKeyboardBuilder()

    builder.button(
        text="‚ö†Ô∏è –ü–µ—Ä–µ–≤–æ–¥ –Ω–µ –ø–æ–ª—É—á–∏–ª",
        callback_data=StaffEditData(
            id=transfer_id, action="staff_transfer_claims", value=""
        ),
    )

    builder.button(
        text="üëÆüèª –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º",
        url=f"tg://user?id={contact}",
        callback_data=URLData(url=""),
    )
    builder.button(
        text="üë®üèª‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
        url=f"tg://user?id={user_id}",
        callback_data=URLData(url=""),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è",
        callback_data=StaffOfficeData(
            action="staff_show_transfers",
        ),
    )
    builder.adjust(1)

    return builder.as_markup()


async def staff_show_transfer_detail_accept(transfer_id, user_id):
    contact = appSettings.botSetting.troubleStaffId

    builder = InlineKeyboardBuilder()

    builder.button(
        text="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
        callback_data=StaffEditData(
            id=transfer_id, action="staff_transfer_accepted", value=""
        ),
    )

    builder.button(
        text="üëÆüèª –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º",
        url=f"tg://user?id={contact}",
        callback_data=URLData(url=""),
    )
    builder.button(
        text="üë®üèª‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
        url=f"tg://user?id={user_id}",
        callback_data=URLData(url=""),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è",
        callback_data=StaffOfficeData(
            action="staff_show_transfers",
        ),
    )
    builder.adjust(1)

    return builder.as_markup()


async def error_kb():
    contact = appSettings.botSetting.troubleStaffId
    builder = InlineKeyboardBuilder()

    builder.button(
        text="üëÆüèª –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º",
        url=f"tg://user?id={contact}",
        callback_data=URLData(),
    )
    builder.button(
        text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data=UserHomeData(action="cancel", id=0)
    )
    builder.adjust(1)

    return builder.as_markup()
